name: Build and Release Go Binary

on:
    push:
        tags:
            - "v*.*.*"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        permissions: write-all
        strategy:
            matrix:
                goos: [linux, windows, darwin]
                goarch: [amd64, arm64]
        steps:
            - uses: actions/checkout@v4
            - run: git fetch --unshallow --quiet --tags --force

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
                  check-latest: true

            - name: Set up cross-compilation environment
              run: |
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    sudo apt-get update && sudo apt-get install -y gcc-mingw-w64
                  elif [ "${{ matrix.goos }}" = "darwin" ]; then
                    sudo apt-get update && sudo apt-get install -y clang llvm-dev libxml2-dev uuid-dev libssl-dev libbz2-dev
                    wget https://github.com/tpoechtrager/osxcross/releases/download/v11/osxcross-11.tar.xz
                    sudo tar xf osxcross-11.tar.xz -C /usr/local
                    echo 'export PATH="/usr/local/osxcross/bin:$PATH"' >> $GITHUB_ENV
                    echo 'export OSXCROSS_SDK=/usr/local/osxcross/SDK/MacOSX11.3.sdk' >> $GITHUB_ENV
                  fi

            - name: Build
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
                  CGO_ENABLED: 1
              run: |
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    CC=x86_64-w64-mingw32-gcc go build -v -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o quicknav-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
                  elif [ "${{ matrix.goos }}" = "darwin" ]; then
                    CC=o64-clang go build -v -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o quicknav-${{ matrix.goos }}-${{ matrix.goarch }}
                  else
                    go build -v -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o quicknav-${{ matrix.goos }}-${{ matrix.goarch }}
                  fi

            - name: Package
              run: |
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                      zip quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.zip quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.exe README.md
                  else
                      tar -czvf quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz quicknav-${{ matrix.goos }}-${{ matrix.goarch }} README.md
                  fi

            - name: Generate SHA256
              run: |
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                      sha256sum quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.zip > quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.zip.sha256
                  else
                      sha256sum quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz > quicknav-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz.sha256
                  fi

            - name: Release
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: |
                      quicknav-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}
                      quicknav-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}.sha256
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
